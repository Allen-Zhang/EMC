<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.1.xsd">
    	
    <sec:http auto-config="true" use-expressions="true">
    	<sec:intercept-url pattern="/main*" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>
    	<sec:intercept-url pattern="/calculator/**" access="isAuthenticated()"/>
    	<sec:intercept-url pattern="/account/**" access="isAuthenticated()"/>
    	<!-- <sec:intercept-url pattern="/**" access="permitAll"/> -->
    	
    	<sec:form-login 
        	login-page="/home.html"
        	default-target-url="/welcome.html" 
        	authentication-failure-url="/home.html?login_error=1"/>
        	<!-- authentication-success-handler-ref="postSuccessAuthHandler" -->
        <sec:logout logout-success-url="/home.html" delete-cookies="JSESSIONID"/>
	</sec:http>
 	
 	<!-- 
 	<bean id="postSuccessAuthHandler" class="com.mercury.security.PostSuccessfulAuthenticationHandler">
	    <property name="defaultTargetUrl" value="main.html"/>
	    <property name="alwaysUseDefaultTargetUrl" value="true"/>
	</bean>
 	
 	<bean id="authenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
  		<property name="authenticationManager" ref="authenticationManager"/>
  		<property name="filterProcessesUrl" value="/j_spring_security_check"/>
	</bean> 
 	-->
 	
	<sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider user-service-ref="customUserDetailsService"/>
        <!-- <sec:authentication-provider>
        	<sec:jdbc-user-service data-source-ref="dataSource"
		   		users-by-username-query="
		      		select username, password, enabled 
		      		from users where username=?" 
		   		authorities-by-username-query="
		      		select u.username, r.authority from users u, user_roles r 
		      		where u.user_id = r.user_id and u.username =?"/>
		</sec:authentication-provider> -->
    </sec:authentication-manager>

 </beans>